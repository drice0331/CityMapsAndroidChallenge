package com.citymaps.userphotodisplay.adapter;

import java.io.IOException;
import java.util.ArrayList;

import com.citymaps.userphotodisplay.R;
import com.citymaps.userphotodisplay.model.UserPhoto;
import com.citymaps.userphotodisplay.util.PhotoDownloader;
import com.citymaps.userphotodisplay.util.UserJsonParser;
import com.citymaps.userphotodisplay.view.LoadingImageView;

import android.content.Context;
import android.graphics.BitmapFactory;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.ImageView;

public class LoadingGridViewAdapter extends ArrayAdapter<UserPhoto> {

	Context mContext;
	PhotoDownloader<LoadingImageView> mPhotoDownloaderThread;
	
	public LoadingGridViewAdapter(Context context, ArrayList<UserPhoto> items, PhotoDownloader<LoadingImageView> photoDownloaderThread) {
		super(context, 0, items);
		mContext = context;
		mPhotoDownloaderThread = photoDownloaderThread;
		
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		if (convertView == null) {
			
			LayoutInflater infalInflater = (LayoutInflater) this.mContext
                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = infalInflater.inflate(R.layout.list_item_photo, null);
		}

		LoadingImageView imageView = (LoadingImageView) convertView
				.findViewById(R.id.gallery_item_imageView);
		imageView.setImageResource(R.drawable.brian_up_close);
		UserPhoto item = getItem(position);
		//TODO - use UserPhoto to determine 
		if(item.getBitmap() == null) {
			byte[] bitmapBytes = null;
			try {
				bitmapBytes = new UserJsonParser().getUrlBytes(item.getUrl());
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			item.setBitmap(BitmapFactory.decodeByteArray(bitmapBytes, 0, bitmapBytes.length));
			mPhotoDownloaderThread.queueThumbnail(imageView, item.getUrl());
		}
		Log.d("ADAPTER", "position is " + position);
		return convertView;
	}
}
